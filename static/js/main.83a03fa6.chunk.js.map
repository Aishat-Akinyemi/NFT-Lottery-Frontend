{"version":3,"sources":["components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/Wallet.js","components/images/celo-logo.png","components/Cover.js","utils/NFTLottery.js","components/NFTLottery/prevRounds.js","hooks/useContract.js","components/NFTLottery/buyTicketForm.js","hooks/useIERC20Contract.js","hooks/useAsync.js","components/ui/Loader.js","components/NFTLottery/NFTLottery.js","App.js","hooks/useBalance.js","hooks/useNFTLotteryContract.js","reportWebVitals.js","index.js"],"names":["Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","truncateAddress","address","slice","length","formatBigNumber","num","shiftedBy","toFixed","Identicon","size","rest","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","style","width","height","Wallet","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Cover","connect","connectWallet","console","log","e","src","logo","alt","Button","approve","IECR20Contract","performActions","noOfTickets","ticketPrice","amountToApprove","BigNumber","kit","defaultAccount","methods","NFTLotteryAddress","NFTLottery","send","from","buyTickets","NFTLotteryContract","buyTicket","getCurrentLotteryID","getLotteryID","call","ID","getLottery","lotteryID","viewLottery","_lottery","checkTicketPrice","getPlayerTicketCount","ticketCount","PrevRounds","prevLottery","useContractKit","winner","noOfTicketsSold","winningTicket","amountInLottery","lotteryStartTime","lotteryEndTime","useState","lotteryId","setLotteryID","lottery","setLottery","playerTickets","setPlayerTicket","previousLottery","preventDefault","result","_playerTickets","nextLottery","noOfPlayers","useContract","abi","contractAddress","getConnectedKit","contract","setContract","getContract","useCallback","web3","eth","Contract","BuyTicketForm","open","onClose","setAmount","setTicketNumber","IERC20Token","IERC20TokenAddress","cUSDToken","handleClose","approved","error","asyncFunction","immediate","status","setStatus","value","setValue","setError","execute","then","response","catch","useAsync","Modal","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","FloatingLabel","controlId","label","Control","type","onChange","amounts","placeholder","Loader","role","loading","setLoading","setPrevLottery","setTicketPrice","openModal","updateLottery","prevLotteryID","_ticketPrice","App","balance","setBalance","getBalance","getTotalBalance","useBalance","Container","fluid","Nav","cUSD","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","networks","Alfajores","network","name","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","description","document","getElementById"],"mappings":"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","file":"static/js/main.83a03fa6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"bottom-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n  <div>\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst NotificationError = ({ text }) => (\n  <div>\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst Props = {\n  text: PropTypes.string,\n};\n\nconst DefaultProps = {\n  text: \"\",\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\nexport { Notification, NotificationSuccess, NotificationError };\n","import { ERC20_DECIMALS } from \"./constants\";\n\n// format a wallet address\nexport const truncateAddress = (address) => {\n  if (!address) return;\n  return (\n    address.slice(0, 5) +\n    \"...\" +\n    address.slice(address.length - 4, address.length)\n  );\n};\n\n// convert from big number\nexport const formatBigNumber = (num) => {\n  if (!num) return;\n  return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n};\n","const ERC20_DECIMALS = 18;\nexport { ERC20_DECIMALS };\n","import { useEffect, useRef } from \"react\";\nimport Jazzicon from \"@metamask/jazzicon\";\n\nexport default function Identicon({ address, size, ...rest }) {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (address && ref.current) {\n      ref.current.innerHTML = \"\";\n      ref.current.appendChild(\n        Jazzicon(size, parseInt(address.slice(2, 10), 16))\n      );\n    }\n  }, [address, size]);\n\n  return (\n    <div {...rest}>\n      <div ref={ref} style={{ width: `${size}px`, height: `${size}px` }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\nimport { formatBigNumber, truncateAddress } from \"./../utils\";\nimport Identicon from \"./ui/Identicon\";\n\nconst Wallet = ({ address, amount, symbol, destroy }) => {\n  if (address) {\n    return (\n      <>\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"light\"\n            align=\"end\"\n            id=\"dropdown-basic\"\n            className=\"d-flex align-items-center border rounded-pill py-1\"\n          >\n            {amount ? (\n              <>\n                {formatBigNumber(amount)}{\" \"}\n                <span className=\"ms-1\"> {symbol}</span>\n              </>\n            ) : (\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\n            )}\n            <Identicon address={address} size={28} className=\"ms-2 me-1\" />\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"shadow-lg border-0\">\n            <Dropdown.Item\n              href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}\n              target=\"_blank\"\n            >\n              <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">\n                  {truncateAddress(address)}\n                </span>\n              </Stack>\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item\n              as=\"button\"\n              className=\"d-flex align-items-center\"\n              onClick={() => {\n                destroy();\n              }}\n            >\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\n              Disconnect\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default Wallet;\n","export default __webpack_public_path__ + \"static/media/celo-logo.0b0d4139.png\";","import logo from \"./images/celo-logo.png\";\nimport { Button } from \"react-bootstrap\";\n\nconst Cover = ({ connect }) => {\n  const connectWallet = async () => {\n    try {\n      await connect();\n    } catch (e) {\n      console.log({ e });\n    }\n  };\n  return (\n    <>\n      <div className=\"cover\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Celo NFT Lottery</p>\n        <Button variant=\"primary\" onClick={connectWallet}>\n          Connect Wallet\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default Cover;\n","import BigNumber from \"big-number/big-number\";\nimport NFTLotteryAddress from \"../contracts/NFTLotteryAddress.json\";\n\nexport const setOperator = async (\n  NFTLotteryContract,\n  performActions,\n  { operatorAddress }\n) => {\n  try {\n    await performActions(async (kit) => {\n      const { defaultAccount } = kit;\n      await NFTLotteryContract.methods\n        .setOperator(operatorAddress)\n        .send({ from: defaultAccount });\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const startLottery = async (NFTLotteryContract, performActions) => {\n  try {\n    await performActions(async (kit) => {\n      const { defaultAccount } = kit;\n      await NFTLotteryContract.methods\n        .startLottery()\n        .send({ from: defaultAccount });\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const approve = async (\n  IECR20Contract,\n  performActions,\n  { noOfTickets, ticketPrice }\n) => {\n  try {\n    const amount = noOfTickets * ticketPrice;\n    const amountToApprove = new BigNumber(amount);\n    await performActions(async (kit) => {\n      const { defaultAccount } = kit;\n      await IECR20Contract.methods\n        .approve(NFTLotteryAddress.NFTLottery, amountToApprove)\n        .send({ from: defaultAccount });\n      return true;\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\n//call approve function before calling this function\nexport const buyTickets = async (\n  NFTLotteryContract,\n  performActions,\n  { noOfTickets }\n) => {\n  try {\n    await performActions(async (kit) => {\n      const { defaultAccount } = kit;\n      await NFTLotteryContract.methods\n        .buyTicket(noOfTickets)\n        .send({ from: defaultAccount });\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const getWinningTickets = async (NFTLotteryContract, performActions) => {\n  try {\n    await performActions(async (kit) => {\n      const { defaultAccount } = kit;\n      await NFTLotteryContract.methods\n        .getWinningTickets()\n        .send({ from: defaultAccount });\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const payoutWinner = async (NFTLotteryContract, performActions) => {\n  try {\n    await performActions(async (kit) => {\n      const { defaultAccount } = kit;\n      await NFTLotteryContract.methods\n        .payoutWinner()\n        .send({ from: defaultAccount });\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const withdrawContractFunds = async (\n  NFTLotteryContract,\n  performActions\n) => {\n  try {\n    await performActions(async (kit) => {\n      const { defaultAccount } = kit;\n      await NFTLotteryContract.methods\n        .withdrawContractFunds()\n        .send({ from: defaultAccount });\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const updateLotteryInterval = async (\n  NFTLotteryContract,\n  performActions,\n  { lotteryInterval, timeUnit }\n) => {\n  try {\n    await performActions(async (kit) => {\n      const { defaultAccount } = kit;\n      await NFTLotteryContract.methods\n        .updateLotteryInterval(lotteryInterval, timeUnit)\n        .send({ from: defaultAccount });\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const getCurrentLotteryID = async (NFTLotteryContract) => {\n  try {\n    const ID = await NFTLotteryContract.methods.getLotteryID().call();\n    return ID;\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const getLottery = async (NFTLotteryContract, { lotteryID }) => {\n  try {\n    const _lottery = await NFTLotteryContract.methods\n      .viewLottery(lotteryID)\n      .call();\n    return _lottery;\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const checkTicketPrice = async (NFTLotteryContract) => {\n  try {\n    const ticketPrice = await NFTLotteryContract.methods\n      .checkTicketPrice()\n      .call();\n    return ticketPrice;\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const checkContractBalance = async (NFTLotteryContract) => {\n  try {\n    const contractBalance = await NFTLotteryContract.methods\n      .checkContractFunds()\n      .call();\n    return contractBalance;\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const getLotteryOperator = async (NFTLotteryContract) => {\n  try {\n    const operatorAddress = await NFTLotteryContract.methods\n      .getOperator()\n      .call();\n    return operatorAddress;\n  } catch (e) {\n    console.log({ e });\n  }\n};\n\nexport const getPlayerTicketCount = async (\n  NFTLotteryContract,\n  { address, lotteryID }\n) => {\n  try {\n    const ticketCount = await NFTLotteryContract.methods\n      .getPlayerTicketCount(address, lotteryID)\n      .call();\n\n    return ticketCount;\n  } catch (e) {\n    console.log({ e });\n  }\n};\n","import React, { useState } from \"react\";\nimport { getLottery, getPlayerTicketCount } from \"../../utils/NFTLottery\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { formatBigNumber } from \"../../utils\";\nimport BigNumber from \"bignumber.js\";\n\nconst PrevRounds = ({ NFTLotteryContract, prevLottery, ticketPrice }) => {\n  const { kit } = useContractKit();\n  const init = {\n    ID: 0,\n    winner: \"0x\",\n    noOfTicketsSold: 0,\n    winningTicket: 0,\n    amountInLottery: 0,\n    lotteryStartTime: 0,\n    lotteryEndTime: 0,\n  };\n\n  const _lottery = prevLottery.ID ? prevLottery : init;\n\n  const [lotteryId, setLotteryID] = useState(_lottery.ID);\n\n  const [lottery, setLottery] = useState(_lottery);\n\n  const [playerTickets, setPlayerTicket] = useState(0);\n\n  const previousLottery = async (e) => {\n    e.preventDefault();\n    const lotteryID = lotteryId - 1;\n    if (lotteryID < 1) {\n      return;\n    }\n    const address = kit.defaultAccount;\n    const result = await getLottery(NFTLotteryContract, { lotteryID });\n    const _playerTickets = await getPlayerTicketCount(NFTLotteryContract, {\n      address,\n      lotteryID,\n    });\n    setLottery(result);\n    setPlayerTicket(_playerTickets);\n    setLotteryID(lotteryID);\n  };\n\n  const nextLottery = async (e) => {\n    e.preventDefault();\n    const lotteryID = lotteryId + 1;\n    if (lotteryID > _lottery.ID) {\n      return;\n    }\n    const address = kit.defaultAccount;\n    const result = await getLottery(NFTLotteryContract, { lotteryID });\n    const _playerTickets = await getPlayerTicketCount(NFTLotteryContract, {\n      address,\n      lotteryID,\n    });\n    setPlayerTicket(_playerTickets);\n    setLottery(result);\n    setLotteryID(lotteryID);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"tabs-container header\">\n          <div className=\"tab\">Lottery History</div>\n        </div>\n        <div className=\"lottery-container\">\n          <div className=\"lottery-header\">\n            <div className=\"round-details\">\n              <p>\n                <strong>ID: </strong>{\" \"}\n                <span className=\"round-num\">{lotteryId}</span>\n              </p>\n              <div className=\"rounds-nav\">\n                <a href=\"/#\" onClick={previousLottery} className=\"prev\">\n                  &#8592;\n                </a>\n                <a href=\"/#\" onClick={nextLottery} className=\"next\">\n                  &#8594;\n                </a>\n              </div>\n            </div>\n            <p>\n              <strong>Winner: {lottery.winner}</strong>\n            </p>\n          </div>\n          <div className=\"lottery-body\">\n            <p>\n              <strong>Price Per Ticket: </strong>\n              {formatBigNumber(new BigNumber(ticketPrice))} cUSD\n            </p>\n            <p>\n              <strong>No of Tickets Sold: </strong> {lottery.noOfTicketsSold}\n            </p>\n            <p>\n              <strong>Participants: </strong>\n              {lottery.noOfPlayers}\n            </p>\n            <p>\n              <strong>Prize: </strong> 0 cUSD\n            </p>\n            <p>\n              <strong>Your Tickets: </strong>\n              {playerTickets}\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PrevRounds;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\nexport const useContract = (abi, contractAddress) => {\n  const { getConnectedKit, address } = useContractKit();\n  const [contract, setContract] = useState(null);\n\n  const getContract = useCallback(async () => {\n    const kit = await getConnectedKit();\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\n  }, [getConnectedKit, abi, contractAddress]);\n\n  useEffect(() => {\n    if (address) getContract();\n  }, [address, getContract]);\n\n  return contract;\n};\n","import React, { useState } from \"react\";\nimport { Modal, Button, Form, FloatingLabel } from \"react-bootstrap\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { buyTickets, approve } from \"../../utils/NFTLottery\";\nimport { useAsync } from \"../../hooks\";\nimport { useIERC20Contract } from \"../../hooks\";\nimport { formatBigNumber } from \"../../utils\";\nimport BigNumber from \"bignumber.js\";\n\nconst BuyTicketForm = ({ NFTLotteryContract, ticketPrice, open, onClose }) => {\n  const { performActions } = useContractKit();\n  const [amount, setAmount] = useState(0);\n  const [noOfTickets, setTicketNumber] = useState(0);\n  const IECR20Contract = useIERC20Contract();\n  const handleClose = () => {\n    onClose();\n  };\n\n  async function _buyTicket() {\n    let approved = true;\n\n    try {\n      await approve(IECR20Contract, performActions, {\n        noOfTickets,\n        ticketPrice,\n      });\n    } catch (error) {\n      approved = false;\n      console.log({ error });\n    }\n    if (approved) {\n      try {\n        //after approval\n        await buyTickets(NFTLotteryContract, performActions, { noOfTickets });\n      } catch (error) {\n        console.log({ error });\n      }\n    }\n  }\n\n  const result = useAsync(_buyTicket, false);\n\n  function onChange(e) {\n    const noOfTickets = e.target.value;\n    const amounts = ticketPrice * noOfTickets;\n    setTicketNumber(noOfTickets);\n    setAmount(amounts);\n  }\n\n  async function onSubmit() {\n    if (result.status === \"pending\") {\n      return;\n    }\n    result.execute();\n    handleClose();\n  }\n\n  return (\n    <Modal show={open} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Buy TIckets</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Ticket Price: {formatBigNumber(new BigNumber(ticketPrice))} cUSD</p>\n        <p>You Pay: {formatBigNumber(new BigNumber(amount))} cUSD</p>\n        <Form onSubmit={onSubmit}>\n          <FloatingLabel\n            controlId=\"floatingNoOfTickets\"\n            label=\"Number Of Tickets\"\n          >\n            <Form.Control\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Number of Tickets\"\n            />\n          </FloatingLabel>\n          <Button variant=\"success\" type=\"submit\">\n            Pay Now\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default BuyTicketForm;\n","import { useContract } from \"./useContract\";\nimport IERC20Token from \"../contracts/IERC20.json\";\nimport IERC20TokenAddress from \"../contracts/IERC20TokenAddress.json\";\n\n// export interface for smart contract\nexport const useIERC20Contract = () =>\n  useContract(IERC20Token.abi, IERC20TokenAddress.cUSDToken);\n","import { useState, useEffect, useCallback } from \"react\";\n\n// // Usage\n// function App() {\n//   const { execute, status, value, error } = useAsync(myFunction, false);\n\n//   return (\n//     <div>\n//       {status === \"idle\" && <div>Start your journey by clicking a button</div>}\n//       {status === \"success\" && <div>{value}</div>}\n//       {status === \"error\" && <div>{error}</div>}\n//       <button onClick={execute} disabled={status === \"pending\"}>\n//         {status !== \"pending\" ? \"Click me\" : \"Loading...\"}\n//       </button>\n//     </div>\n//   );\n// }\n\n// // An async function for testing our hook.\n// // Will be successful 50% of the time.\n// const myFunction = () => {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const rnd = Math.random() * 10;\n//       rnd <= 5\n//         ? resolve(\"Submitted successfully 🙌\")\n//         : reject(\"Oh no there was an error 😞\");\n//     }, 2000);\n//   });\n// };\n\n// // Hook\nexport const useAsync = (asyncFunction, immediate = true) => {\n  const [status, setStatus] = useState(\"idle\");\n  const [value, setValue] = useState(null);\n  const [error, setError] = useState(null);\n\n  // The execute function wraps asyncFunction and\n  // handles setting state for pending, value, and error.\n  // useCallback ensures the below useEffect is not called\n  // on every render, but only if asyncFunction changes.\n  const execute = useCallback(() => {\n    setStatus(\"pending\");\n    setValue(null);\n    setError(null);\n\n    return asyncFunction()\n      .then((response) => {\n        setValue(response);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus(\"error\");\n      });\n  }, [asyncFunction]);\n\n  // Call execute if we want to fire it right away.\n  // Otherwise execute can be called later, such as\n  // in an onClick handler.\n  useEffect(() => {\n    if (immediate) {\n      execute();\n    }\n  }, [execute, immediate]);\n\n  return { execute, status, value, error };\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <div className=\"d-flex justify-content-center\">\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  </div>\n);\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport {\n  getLottery,\n  getCurrentLotteryID,\n  checkTicketPrice,\n  getPlayerTicketCount,\n} from \"../../utils/NFTLottery\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { formatBigNumber } from \"../../utils\";\nimport PrevRounds from \"./prevRounds\";\nimport BuyTicketForm from \"./buyTicketForm\";\nimport BigNumber from \"bignumber.js\";\nimport Loader from \"../ui/Loader\";\n\nconst NFTLottery = ({ NFTLotteryContract }) => {\n  const { kit } = useContractKit();\n  const [loading, setLoading] = useState(false);\n  const [lottery, setLottery] = useState({});\n  const [prevLottery, setPrevLottery] = useState({});\n  const [ticketPrice, setTicketPrice] = useState(0);\n  const [playerTickets, setPlayerTicket] = useState(0);\n  const [open, openModal] = useState(false);\n\n  useEffect(() => {\n    try {\n      if (NFTLotteryContract) {\n        updateLottery();\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n  }, [NFTLotteryContract, getLottery]);\n\n  const updateLottery = async () => {\n    try {\n      setLoading(true);\n      const lotteryID = await getCurrentLotteryID(NFTLotteryContract);\n      if (lotteryID > 2) {\n        const prevLotteryID = lotteryID - 1;\n        const prevLottery = await getLottery(NFTLotteryContract, {\n          prevLotteryID,\n        });\n        setPrevLottery(prevLottery);\n      }\n\n      const address = kit.defaultAccount;\n      const _lottery = await getLottery(NFTLotteryContract, { lotteryID });\n      const _ticketPrice = await checkTicketPrice(NFTLotteryContract);\n      const _playerTickets = await getPlayerTicketCount(NFTLotteryContract, {\n        address,\n        lotteryID,\n      });\n\n      setPlayerTicket(_playerTickets);\n      setLottery(_lottery);\n      setTicketPrice(_ticketPrice);\n    } catch (e) {\n      console.log({ e });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      {!loading ? (\n        <>\n          <div className=\"container\">\n            <div className=\"tabs-container header\">\n              <div className=\"tab\">Current Lottery</div>\n            </div>\n            <div className=\"lottery-container\">\n              <div className=\"lottery-header\">\n                <div>\n                  <p>\n                    <strong>ID: </strong> {lottery.ID}\n                  </p>\n                  <p>\n                    <strong>Lottery Ends In: </strong> {lottery.lotteryEndTime}\n                  </p>\n                </div>\n              </div>\n              <div className=\"lottery-body\">\n                <p>\n                  <strong>Price Per Ticket: </strong>{\" \"}\n                  {formatBigNumber(new BigNumber(ticketPrice))} cUSD\n                </p>\n                <p>\n                  <strong>No Of tickets Sold: </strong>\n                  {lottery.noOfTicketsSold}\n                </p>\n                <p>\n                  <strong>Participants: </strong>\n                  {lottery.noOfPlayers}\n                </p>\n                <p>\n                  <strong>Prize: </strong> 0 cUSD\n                </p>\n                <p>\n                  <strong>Your Tickets: </strong>\n                  {playerTickets}\n                </p>\n              </div>\n              <div className=\"lottery-footer\">\n                <Button\n                  variant=\"success\"\n                  className=\"buy-lottery-btn\"\n                  onClick={() => openModal(true)}\n                >\n                  Buy Ticket\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <PrevRounds\n            NFTLotteryContract={NFTLotteryContract}\n            prevLottery={prevLottery}\n            ticketPrice={ticketPrice}\n          />\n        </>\n      ) : (\n        <Loader />\n      )}\n      {open && (\n        <BuyTicketForm\n          NFTLotteryContract={NFTLotteryContract}\n          ticketPrice={ticketPrice}\n          open={open}\n          onClose={() => openModal(false)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default NFTLottery;\n","import React from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { Notification } from \"./components/ui/Notifications\";\nimport Wallet from \"./components/Wallet\";\nimport Cover from \"./components/Cover\";\nimport NFTLottery from \"./components/NFTLottery/NFTLottery\";\nimport { useBalance, useNFTLotteryContract } from \"./hooks\";\nimport \"./App.css\";\n\nconst App = function AppWrapper() {\n  const { address, destroy, connect } = useContractKit();\n  const { balance } = useBalance();\n  const NFTLotteryContract = useNFTLotteryContract();\n\n  return (\n    <>\n      <Notification />\n      {address ? (\n        <>\n          <Container fluid=\"md\" className=\"hero\">\n            <Nav className=\"justify-content-end pt-3 pb-5\">\n              <Nav.Item>\n                {/*display user wallet*/}\n                <Wallet\n                  address={address}\n                  amount={balance.cUSD}\n                  symbol=\"cUSD\"\n                  destroy={destroy}\n                />\n              </Nav.Item>\n            </Nav>\n            <div className=\"header\">\n              <p className=\"title light\">CELO NFT Lottery</p>\n              <p className=\"subtitle light\">\n                A lottery platform built on top of Celo Blockchain 🔦\n              </p>\n            </div>\n            {/* display cover */}\n          </Container>\n          <NFTLottery NFTLotteryContract={NFTLotteryContract} />\n        </>\n      ) : (\n        // display cover if user is not connected\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Cover connect={connect} />\n          </header>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\nexport const useBalance = () => {\n  const { address, kit } = useContractKit();\n  const [balance, setBalance] = useState(0);\n\n  const getBalance = useCallback(async () => {\n    // fetch a connected wallet token balance\n    const value = await kit.getTotalBalance(address);\n    setBalance(value);\n  }, [address, kit]);\n\n  useEffect(() => {\n    if (address) getBalance();\n  }, [address, getBalance]);\n\n  return {\n    balance,\n    getBalance,\n  };\n};\n","import { useContract } from \"./useContract\";\nimport NFTLottery from \"../contracts/NFTLottery.json\";\nimport NFTLotteryAddress from \"../contracts/NFTLotteryAddress.json\";\n\n// export interface for smart contract\nexport const useNFTLotteryContract = () =>\n  useContract(NFTLottery.abi, NFTLotteryAddress.NFTLottery);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  ContractKitProvider,\n  Alfajores,\n  NetworkNames,\n} from \"@celo-tools/use-contractkit\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"./css/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContractKitProvider\n      networks={[Alfajores]}\n      network={{\n        name: NetworkNames.Alfajores,\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\n        chainId: 44787,\n      }}\n      dapp={{\n        name: \"Celo NFT Lottery\",\n        description: \"Lottery DAPP for Dacade Submission\",\n      }}\n    >\n      <App />\n    </ContractKitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}